import org.gradle.api.JavaVersion
import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id 'eclipse'
    id 'dev.architectury.loom' version '1.6-SNAPSHOT'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

loom {
    runs {
        data {
            data()
        }
    }
    accessWidenerPath = file("src/main/resources/cinderscapes.accesswidener")
    forge {
        dataGen {
            mod "cinderscapes"
        }
        convertAccessWideners = true
        extraAccessWideners.add("cinderscapes.accesswidener")
        mixinConfigs = ["mixins.cinderscapes-common.json", "mixins.cinderscapes-worldgen.json"]
    }
}

group = project.maven_group

repositories {
    maven {
        url "https://maven.shedaniel.me"
        content {
            includeGroup "me.shedaniel.cloth.api"
            includeGroup "me.sargunvohra.mcmods"
            includeGroup "me.shedaniel.cloth"
            includeGroup "me.shedaniel"
        }
    }
    maven {
        name = "Progwml6 (Just Enough Items)"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = 'TerraformersMC'
        url = 'https://maven.terraformersmc.com/'
    }
    maven {
        url = "https://api.modrinth.com/maven"
    }
    maven {  url = "https://repo.repsy.io/mvn/trinsdar/reforged-mods/"}
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:$project.minecraft_version"
    mappings "net.fabricmc:yarn:${rootProject.minecraft_version}+${project.yarn_mappings}:v2"

    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    modImplementation ("maven.modrinth:fb-api-reforged:${rootProject.fbapi_reforged_version}")
    //modImplementation "com.github.Reforged-Mods.Terraform-Reforged:terraform-biome-remapper-api-v1:${project.terraform_version}"
    modImplementation include("io.github.reforgedmods.terraform-api:terraform-shapes-api-v1:${project.terraform_version}")
    modImplementation include("io.github.reforgedmods.terraform-api:terraform-wood-api-v1:${project.terraform_version}")
    modImplementation include("io.github.reforgedmods.terraform-api:terraform-utils-v1:${project.terraform_version}")

    modImplementation include("me.shedaniel.cloth:cloth-config-forge:${project.clothconfig_version}")

}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

configurations {
    dev {
        canBeResolved = false
        canBeConsumed = true
    }
}

jar {
    archiveClassifier.set "dev"
}