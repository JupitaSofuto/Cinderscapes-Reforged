import org.gradle.api.JavaVersion

plugins {
    id 'java'
    id 'dev.architectury.loom' version '0.12.0-SNAPSHOT' apply false
}


configurations {
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
}

allprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)


    repositories {
        maven {
            url "https://maven.shedaniel.me"
            content {
                includeGroup "me.shedaniel.cloth.api"
                includeGroup "me.sargunvohra.mcmods"
                includeGroup "me.shedaniel.cloth"
                includeGroup "me.shedaniel"
            }
        }
        maven {
            name = "Progwml6 (Just Enough Items)"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            name = 'TerraformersMC'
            url = 'https://maven.terraformersmc.com/'
        }
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${rootProject.minecraft_version}+${rootProject.yarn_mappings}:v2"

        forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

        modImplementation ("com.github.Reforged-Mods:FabricBiomeApiReforged:${rootProject.fbapi_reforged_version}") //d7bc649383
        modImplementation("com.github.Reforged-Mods.Terraform-Reforged:terraform-biome-remapper-api-v1:${rootProject.terraform_version}")
        modImplementation("com.github.Reforged-Mods.Terraform-Reforged:terraform-wood-api-v1:${rootProject.terraform_version}")
        modImplementation("com.github.Reforged-Mods.Terraform-Reforged:terraform-shapes-api-v1:${rootProject.terraform_version}")
        modImplementation("com.github.Reforged-Mods.Terraform-Reforged:terraform-utils-v1:${rootProject.terraform_version}")
        //modRuntimeOnly ("com.github.Reforged-Mods.Terraform-Reforged:build:${rootProject.terraform_version}")

        modImplementation "me.shedaniel.cloth:cloth-config-forge:${rootProject.clothconfig_version}"
    }

    processResources {
        inputs.property "version", project.version

        filesMatching("META-INF/mods.toml") {
            expand "version": project.version
        }
    }
}

subprojects {

    configurations { remapped }
    artifacts.add("remapped", remapJar)
    version = rootProject.version

    runClient.enabled = false
}

loom {
    accessWidenerPath = file("src/main/resources/cinderscapes.accesswidener")
    forge{
        //convertAccessWideners = true
        //extraAccessWideners.add("cinderscapes.accesswidener")
        mixinConfigs = ["mixins.cinderscapes-common.json", "mixins.cinderscapes-worldgen.json","arrp.mixins.json"]
    }
}

dependencies {
    modImplementation(include("com.github.Reforged-Mods:ARRP-forge:0.5.7.2"))
    modImplementation(include("me.shedaniel.cloth:cloth-config-forge:${rootProject.clothconfig_version}"))
    def deps = [":common", ":worldgen", "client"]
    for (String s : deps){
        include(project(path: s, configuration: "remapped"))
        modImplementation(project(path: s))
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}


// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}
